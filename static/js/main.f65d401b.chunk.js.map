{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","count","Math","ceil","countPages","i","push","className","cn","disabled","href","onClick","map","num","active","hendelNewPage","length","items","from","to","numbers","n","getNumbers","App","useState","page","setPage","setPerPage","visiblItems","complitItems","toItems","getVisiblItems","fromItems","id","onChange","event","target","value","defaultValue","htmlFor","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAuB,GAEpBC,EAAI,EAAGA,GAAKJ,EAAOI,GAAK,EAC/BD,EAAWE,KAAKD,GAmBlB,OACE,qBAAIE,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QA5Be,WACjBZ,EAAc,GAChBC,EAAaD,EAAc,IAqBzB,oBAWDK,EAAWQ,KAAI,SAAAC,GAAG,OACjB,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQf,IAAgBc,IAF5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAjCG,SAACE,GACrBb,EAAaa,GAgCUE,CAAcF,IAJ/B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUV,IAAgBK,EAAWY,SADvC,SAIE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBK,EAAWY,OAAS,OAAS,QAC5DL,QAvDe,WACjBZ,EAAcK,EAAWY,QAC3BhB,EAAaD,EAAc,IAgDzB,wBCxEFkB,ECPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDAKE,CAAW,EAAG,IACzBV,KAAI,SAAAS,GAAC,qBAAYA,MAmBPE,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB6B,EAAhB,KAOMC,EA1B+B,SAACC,EAAcJ,EAAM3B,GAM1D,IALA,IAAM8B,EAAc,GAGdE,EAAUL,EAAO3B,EAEdO,EAHSoB,EAAO3B,EAAUA,EAGXO,EAAIyB,EAASzB,GAAK,EAAG,CAC3C,IAAKwB,EAAaxB,GAChB,OAAOuB,EAGTA,EAAYtB,KAAKuB,EAAaxB,IAGhC,OAAOuB,EAYaG,CAAed,EAAOQ,EAAM3B,GAE1CkC,EAAYP,EAAO3B,EAAUA,EAAU,EACvCgC,EAAUL,EAAO3B,EAAUmB,EAAMD,OAASC,EAAMD,OAASS,EAAO3B,EAEtE,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EADX,mBAC0BO,EAD1B,cACyCF,EADzC,eACuDb,EAAMD,OAD7D,OAIA,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAxBY,SAACC,GACrBR,GAAYQ,EAAMC,OAAOC,OACzBX,EAAQ,IAuBAY,aAAc,EALhB,UAOE,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOoB,EAAMD,OACblB,QAASA,EACTC,YAAa0B,EACbzB,aAAc,SAACwC,GACbd,EAAQc,MAGZ,6BACGZ,EAAYhB,KAAI,SAAA6B,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE7ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f65d401b.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const count = Math.ceil(total / perPage);\n  const countPages: number[] = [];\n\n  for (let i = 1; i <= count; i += 1) {\n    countPages.push(i);\n  }\n\n  const hendelPrevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const hendelNextPage = () => {\n    if (currentPage < countPages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const hendelNewPage = (num: number) => {\n    onPageChange(num);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={hendelPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {countPages.map(num => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === num,\n          })}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => hendelNewPage(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === countPages.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === countPages.length ? 'true' : 'false'}\n          onClick={hendelNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { GetVisiblItems } from './components/typs/GetVisiblItems';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst getVisiblItems: GetVisiblItems = (complitItems, page, perPage) => {\n  const visiblItems = [];\n\n  const fromItems = page * perPage - perPage;\n  const toItems = page * perPage;\n\n  for (let i = fromItems; i < toItems; i += 1) {\n    if (!complitItems[i]) {\n      return visiblItems;\n    }\n\n    visiblItems.push(complitItems[i]);\n  }\n\n  return visiblItems;\n};\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const changePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const visiblItems = getVisiblItems(items, page, perPage);\n\n  const fromItems = page * perPage - perPage + 1;\n  const toItems = page * perPage > items.length ? items.length : page * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${fromItems} - ${toItems} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={changePerPage}\n            defaultValue={5}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={(newPage) => {\n          setPage(newPage);\n        }}\n      />\n      <ul>\n        {visiblItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}